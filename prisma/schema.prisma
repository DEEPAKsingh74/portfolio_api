generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model about {
  id          Int       @id @default(autoincrement())
  description String    @db.VarChar(2000)
  created_at  DateTime? @default(now()) @db.Timestamp(0)
  updated_at  DateTime? @default(now()) @db.Timestamp(0)
}

model project_skill {
  id         Int       @id @default(autoincrement())
  skill_id   Int?
  project_id Int?
  projects   projects? @relation(fields: [project_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "project_skill_ibfk_1")
  skills     skills?   @relation(fields: [skill_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "project_skill_ibfk_2")

  @@index([project_id], map: "project_id")
  @@index([skill_id], map: "skill_id")
}

model projects {
  id            Int             @id @default(autoincrement())
  title         String          @db.VarChar(50)
  description   String?         @db.VarChar(1000)
  created_at    DateTime?       @default(now()) @db.Timestamp(0)
  updated_at    DateTime?       @default(now()) @db.Timestamp(0)
  project_skill project_skill[]
}

model skills {
  id            Int             @id @default(autoincrement())
  language      String          @db.VarChar(20)
  description   String?         @db.VarChar(1000)
  created_at    DateTime?       @default(now()) @db.Timestamp(0)
  updated_at    DateTime?       @default(now()) @db.Timestamp(0)
  percentage    Int
  image         String?         @db.VarChar(200)
  project_skill project_skill[]
}

model education {
  id                Int                 @id @default(autoincrement())
  name              String              @db.VarChar(100)
  state             String              @db.VarChar(50)
  score             Decimal             @db.Decimal(6, 2)
  description       String?             @db.VarChar(1000)
  created_at        DateTime?           @default(now()) @db.Timestamp(0)
  updated_at        DateTime?           @default(now()) @db.Timestamp(0)
  education_subject education_subject[]
}

model education_subject {
  id           Int        @id @default(autoincrement())
  education_id Int?
  subject_id   Int?
  created_at   DateTime?  @default(now()) @db.Timestamp(0)
  updated_at   DateTime?  @default(now()) @db.Timestamp(0)
  education    education? @relation(fields: [education_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "education_subject_ibfk_1")
  subjects     subjects?  @relation(fields: [subject_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "education_subject_ibfk_2")

  @@index([education_id], map: "education_id")
  @@index([subject_id], map: "subject_id")
}

model subjects {
  id                Int                 @id @default(autoincrement())
  name              String              @db.VarChar(50)
  created_at        DateTime?           @default(now()) @db.Timestamp(0)
  updated_at        DateTime?           @default(now()) @db.Timestamp(0)
  education_subject education_subject[]
}

model certificates {
  id         Int       @id @default(autoincrement())
  name       String    @db.VarChar(100)
  created_at DateTime? @default(now()) @db.Timestamp(0)
  updated_at DateTime? @default(now()) @db.Timestamp(0)
}
